<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro"  name="robot">

    <xacro:arg name="robot_namespace" default=""/>
    <xacro:arg name="wheel_odom_topic" default="odom" />
    <xacro:arg name="publish_wheel_odom_tf" default="true" />
    <xacro:arg name="ground_truth_frame" default="map"/>
    <xacro:arg name="sim_gz" default="false" />
    <xacro:arg name="odometry_source" default="world" />
    <xacro:arg name="two_d_lidar_enabled" default="false" />

    <xacro:property name="two_d_lidar_update_rate" value="30"/>
    <xacro:property name="two_d_lidar_sample_size" value="361"/>
    <xacro:property name="two_d_lidar_min_angle" value="0"/>
    <xacro:property name="two_d_lidar_max_angle" value="360"/>
    <xacro:property name="two_d_lidar_min_range" value="0.55"/>
    <xacro:property name="two_d_lidar_max_range" value="16"/>


    <link name="base_link">

    </link>

    <!-- BASE_FOOTPRINT LINK -->

    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_footprint"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <link name="base_footprint">
    </link>

    <xacro:macro name="inertial_cylinder" params="mass length radius *origin">
        <inertial>
            <xacro:insert_block name="origin"/>
            <mass value="${mass}" />
            <inertia ixx="${(1/12) * mass * (3*radius*radius + length*length)}" ixy="0.0" ixz="0.0"
                    iyy="${(1/12) * mass * (3*radius*radius + length*length)}" iyz="0.0"
                    izz="${(1/2) * mass * (radius*radius)}" />
        </inertial>
    </xacro:macro>

    <link name="two_d_lidar">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
                <material name="black">
                    <color rgba="0 0 0 1"/>
                </material>
        </visual>
        <visual>
            <origin xyz="0 0 -0.05"/>
            <geometry>
                <cylinder radius="0.01" length="0.1"/>
            </geometry>
                <material name="black">
                      <color rgba="0 0 0 1"/>
                  </material>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <joint name="two_d_lidar_joint" type="fixed">
        <parent link="base_link"/>
        <child link="two_d_lidar"/>
        <origin xyz="0 -0.05 0.09" rpy="0 0 0"/>
    </joint>

    <gazebo reference="two_d_lidar">
        <material>Gazebo/Red</material>

        <sensor name="laser" type="ray">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <min_angle>-3.14</min_angle>
                        <max_angle>3.14</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.3</min>
                    <max>12</max>
                </range>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <argument>~/out:=scan</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>laser_frame</frame_name>
            </plugin>
        </sensor>
    </gazebo>
    <!--gazebo reference="two_d_lidar">
            <material>Gazebo/White</material>
    </gazebo>

    <xacro:if value="$(arg two_d_lidar_enabled)">
        <gazebo reference="two_d_lidar">
            <plugin filename="ignition-gazebo-sensors-system" name="ignition::gazebo::systems::Sensors">
                <render_engine>ogre2</render_engine>
            </plugin>
            <sensor name='gpu_lidar' type='gpu_lidar'>
                <topic>scan</topic>
                <update_rate>${two_d_lidar_update_rate}</update_rate>
                <ignition_frame_id>two_d_lidar</ignition_frame_id>
                <lidar>
                    <scan>
                        <horizontal>
                            <samples>${two_d_lidar_sample_size}</samples>
                            <resolution>1</resolution>
                            <min_angle>${radians(two_d_lidar_min_angle)}</min_angle>
                            <max_angle>${radians(two_d_lidar_max_angle)}</max_angle>
                        </horizontal>
                    </scan>
                    <range>
                        <min>${two_d_lidar_min_range}</min>
                        <max>${two_d_lidar_max_range}</max>
                        <resolution>0.01</resolution>
                    </range>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.001</stddev>
                    </noise>
                </lidar>
                <alwaysOn>1</alwaysOn>
                <visualize>true</visualize>
            </sensor>
        </gazebo>
    </xacro:if-->


    <!-- CHASSIS LINK -->

    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis_link"/>
        <origin xyz="0 0 0"/>
    </joint>

      <link
    name="chassis_link">
    <inertial>
      <origin
        xyz="0.00196170680937007 -0.0868228015469567 -0.0309340370914814"
        rpy="0 0 0" />
      <mass
        value="0.458411450979246" />
      <inertia
        ixx="0.000542871589384656"
        ixy="1.69749191833194E-07"
        ixz="9.16830524623752E-08"
        iyy="0.000657663684621469"
        iyz="-3.00802775983815E-06"
        izz="0.00108671668484761" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
          <mesh filename="file://$(find Oscar_SC_Robot)/meshes/base_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 1 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find Oscar_SC_Robot)/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>
  <link
    name="Left_wheel_link">
    <inertial>
      <origin
        xyz="-0.00784940612576868 4.28642898509662E-05 -9.31058257115994E-06"
        rpy="0 0 0" />
      <mass
        value="0.0274335863022573" />
      <inertia
        ixx="1.13862377406955E-05"
        ixy="-4.63211244042856E-15"
        ixz="9.35749928836235E-15"
        iyy="6.00789413976309E-06"
        iyz="-1.82633067451514E-08"
        izz="6.02049780409006E-06" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find Oscar_SC_Robot)/meshes/left_wheel_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 1 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find Oscar_SC_Robot)/meshes/left_wheel_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Left_wheel_link_joint"
    type="continuous">
    <origin
      xyz="0.0758 -0.08 -0.035"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="Left_wheel_link" />
    <axis
      xyz="1 0 0" />
  </joint>
  <gazebo>
    <plugin filename="ignition-gazebo-joint-state-publisher-system" name="ignition::gazebo::systems::JointStatePublisher">
    </plugin>
  </gazebo>
  <link
    name="Right_wheel_link">
    <inertial>
      <origin
        xyz="-0.00784940612576874 4.28642898509385E-05 -9.31058257162831E-06"
        rpy="0 0 0" />
      <mass
        value="0.0274335863022572" />
      <inertia
        ixx="1.13862377406954E-05"
        ixy="-4.63212894995761E-15"
        ixz="9.3575734507046E-15"
        iyy="6.00789413976302E-06"
        iyz="-1.82633067450594E-08"
        izz="6.02049780409007E-06" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find Oscar_SC_Robot)/meshes/right_wheel_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 1 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find Oscar_SC_Robot)/meshes/right_wheel_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Right_wheel_link_joint"
    type="continuous">
    <origin
      xyz="-0.0586 -0.08 -0.035"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="Right_wheel_link" />
    <axis
      xyz="1 0 0" />
  </joint>
   <link
    name="Link_pair_1">
    <inertial>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <mass
        value="0.00369780273035827" />
      <inertia
        ixx="6.11514536437229E-08"
        ixy="-5.820653179875E-24"
        ixz="2.01266652952978E-24"
        iyy="6.25046675936164E-07"
        iyz="-7.7711533483172E-25"
        izz="6.70790618203394E-07" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find Oscar_SC_Robot)/meshes/link_pair_1.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 1 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
        <geometry>
        <mesh
          filename="file://$(find Oscar_SC_Robot)/meshes/link_pair_1.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Link_pair_1_joint"
    type="continuous">
    <origin
      xyz="0.087 -0.0695 -0.018"
      rpy="1.5708 0 0" />
    <parent
      link="base_link" />
    <child
      link="Link_pair_1" />
    <axis
      xyz="0 0 1" />
  </joint>
    <gazebo>
    <plugin filename="ignition-gazebo-joint-state-publisher-system" name="ignition::gazebo::systems::JointStatePublisher">
    </plugin>
  </gazebo>
  <link
    name="big_triangle_1">
    <inertial>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <mass
        value="0.074547880950281" />
      <inertia
        ixx="5.43833714550981E-05"
        ixy="-1.64485303519001E-06"
        ixz="1.46443358252426E-06"
        iyy="6.94150724784236E-05"
        iyz="-7.5546027497944E-07"
        izz="2.41737178555845E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find Oscar_SC_Robot)/meshes/Big_triangle_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 1 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find Oscar_SC_Robot)/meshes/Big_triangle_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="big_triangle_1_joint"
    type="continuous">
    <origin
      xyz="0.0365000000000118 0 -0.048"
      rpy="0.0087266462599717 0 0" />
    <parent
      link="Link_pair_1" />
    <child
      link="big_triangle_1" />
    <axis
      xyz="0 0.00872653549837413 0.999961923064171" />
  </joint>
  <!--link
    name="link_1">
    <inertial>
      <origin
        xyz="0.00925000000000004 -3.56659146660832E-15 -6.93889390390723E-17"
        rpy="0 0 0" />
      <mass
        value="0.000418829254091884" />
      <inertia
        ixx="1.72374656454096E-09"
        ixy="2.13344257577636E-22"
        ixz="2.0524418948972E-23"
        iyy="2.05758913679062E-08"
        iyz="7.09745245672708E-25"
        izz="2.16713940513094E-08" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find Oscar_SC_Robot)/meshes/Link_1.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.858823529411765 0.858823529411765 0.858823529411765 0.1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find Oscar_SC_Robot)/meshes/Link_1.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="link_1_joint"
    type="continuous">
    <origin
      xyz="0.051256 -0.01171 0.033266"
      rpy="-0.012341 -0.78536 0.0087263" />
    <parent
      link="big_triangle_1" />
    <child
      link="link_1" />
    <axis
      xyz="0 0 1" />
  </joint>
  <link
    name="big_non_actuated_triangle_mirror">
    <inertial>
      <origin
        xyz="0.030919243545911 0.00878668880203192 -0.0148475592469524"
        rpy="0 0 0" />
      <mass
        value="0.0721297540054504" />
      <inertia
        ixx="5.39632726368139E-05"
        ixy="1.56283388931883E-06"
        ixz="-1.44322942163294E-06"
        iyy="6.91067908994078E-05"
        iyz="5.02154368175076E-08"
        izz="2.3503289928344E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://Oscar_SC_Robot/meshes/big_non_actuated_triangle_mirror.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 1 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://Oscar_SC_Robot/meshes/big_non_actuated_triangle_mirror.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="big_non_actuated_triangle_mirror_joint"
    type="continuous">
    <origin
      xyz="0.0185000000000003 0 0"
      rpy="-0.0174516313869211 -0.785283940562994 0.0123396187386001" />
    <parent
      link="link_1" />
    <child
      link="big_non_actuated_triangle_mirror" />
    <axis
      xyz="0.707026008833154 -0.0123409498970772 0.707079856727016" />
  </joint>
  <xacro:property name="odometry_source" value="$(arg odometry_source)"/>

     <gazebo>
        <plugin filename="ignition-gazebo-sensors-system" name="ignition::gazebo::systems::Sensors">
            <render_engine>ogre2</render_engine>
        </plugin>

        <plugin filename="ignition-gazebo-imu-system" name="ignition::gazebo::systems::Imu">
        </plugin>

        <plugin filename="ignition-gazebo-joint-state-publisher-system" name="ignition::gazebo::systems::JointStatePublisher">
        </plugin>



        <plugin filename="ignition-gazebo-diff-drive-system" name="ignition::gazebo::systems::DiffDrive">
            <left_joint>Left_wheel_link_joint</left_joint>
            <right_joint>Right_wheel_link_joint</right_joint>
            <wheel_separation>0.35</wheel_separation>
            <wheel_radius>0.1</wheel_radius>
            <odom_publish_frequency>30</odom_publish_frequency>
            <topic>/cmd_vel</topic>
            <xacro:if value="${odometry_source == 'encoders'}">
                <odom_topic>$(arg wheel_odom_topic)</odom_topic>
                <tf_topic>/tf</tf_topic>
            </xacro:if>
            <frame_id>odom</frame_id>
            <child_frame_id>base_footprint</child_frame_id>
        </plugin>
    </gazebo>

    <xacro:if value="${odometry_source == 'world'}">
    <gazebo>
        <plugin filename="libignition-gazebo6-odometry-publisher-system"
            name="ignition::gazebo::systems::OdometryPublisher">
            <odom_frame>odom</odom_frame>
            <robot_base_frame>base_footprint</robot_base_frame>
            <odom_topic>$(arg wheel_odom_topic)</odom_topic>
            <tf_topic>/tf</tf_topic>
            <dimensions>2</dimensions>
            <odom_publish_frequency>10</odom_publish_frequency>
        </plugin>
    </gazebo>
    </xacro:if-->

    <gazebo>
        <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">

            <!-- Wheel Information -->
            <left_joint>Left_wheel_link_joint</left_joint>
            <right_joint>Right_wheel_link_joint</right_joint>
            <wheel_separation>0.35</wheel_separation>
            <wheel_diameter>0.1</wheel_diameter>


            <!-- Limits -->
            <max_wheel_torque>200</max_wheel_torque>
            <max_wheel_acceleration>10.0</max_wheel_acceleration>

            
            <!-- Output -->
            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>base_link</robot_base_frame>

            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_tf>true</publish_wheel_tf>

        </plugin>
    </gazebo>


</robot>